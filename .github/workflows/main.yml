# This is a basic workflow to help you get started with Actions

name: PHP degrade check

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  api-request-test:
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      # create a container
      - name: up docker container
        run: docker-compose up -d

      # TEST : curl request 1
      - name: CHECK caluclation
        run: |
          response=`curl http://localhost:8000/api.php?num=3`
          echo $response
          actual=$(echo "$response" | jq -r '[.status, .num, .num_x_num, .num_x_num_x_num]|join(" ")')
          expect=$(echo 'OK 3 9 27')
          
          echo "actual_value: $actual" 
          echo "expect_value: $expect"
          
          test "$expect" == "$actual"; echo $?
      - if: failure()
        run: echo failure
        continue-on-error: true
          
      # TEST : curl request 2
      - name: CHECK validation
        run: |
          response=`curl http://localhost:8000/api.php?num=A`
          echo $response
          actual=$(echo "$response" | jq -r '[.status, .num, .num_x_num, .num_x_num_x_num]|join(" ")')
          expect=$(echo 'NG')
          
          echo "actual_value: $actual" 
          echo "expect_value: $expect"
          
          test "$expect" == "$actual"; echo $?          
        
      - if: failure()
        run: echo failure
        continue-on-error: true
